// Code generated by protoc-gen-go. DO NOT EDIT.
// source: FriendMessageService.proto

package com_dipper_proto_rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FriendMessagePro struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FromUserId           int32    `protobuf:"varint,2,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`
	ToUserId             int32    `protobuf:"varint,3,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`
	Content              string   `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	SendTime             string   `protobuf:"bytes,5,opt,name=send_time,json=sendTime,proto3" json:"send_time,omitempty"`
	IsRead               int32    `protobuf:"varint,6,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	IsDel                int32    `protobuf:"varint,7,opt,name=is_del,json=isDel,proto3" json:"is_del,omitempty"`
	IsBack               int32    `protobuf:"varint,8,opt,name=is_back,json=isBack,proto3" json:"is_back,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendMessagePro) Reset()         { *m = FriendMessagePro{} }
func (m *FriendMessagePro) String() string { return proto.CompactTextString(m) }
func (*FriendMessagePro) ProtoMessage()    {}
func (*FriendMessagePro) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8804fa9690fd5de, []int{0}
}

func (m *FriendMessagePro) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendMessagePro.Unmarshal(m, b)
}
func (m *FriendMessagePro) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendMessagePro.Marshal(b, m, deterministic)
}
func (m *FriendMessagePro) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendMessagePro.Merge(m, src)
}
func (m *FriendMessagePro) XXX_Size() int {
	return xxx_messageInfo_FriendMessagePro.Size(m)
}
func (m *FriendMessagePro) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendMessagePro.DiscardUnknown(m)
}

var xxx_messageInfo_FriendMessagePro proto.InternalMessageInfo

func (m *FriendMessagePro) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FriendMessagePro) GetFromUserId() int32 {
	if m != nil {
		return m.FromUserId
	}
	return 0
}

func (m *FriendMessagePro) GetToUserId() int32 {
	if m != nil {
		return m.ToUserId
	}
	return 0
}

func (m *FriendMessagePro) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *FriendMessagePro) GetSendTime() string {
	if m != nil {
		return m.SendTime
	}
	return ""
}

func (m *FriendMessagePro) GetIsRead() int32 {
	if m != nil {
		return m.IsRead
	}
	return 0
}

func (m *FriendMessagePro) GetIsDel() int32 {
	if m != nil {
		return m.IsDel
	}
	return 0
}

func (m *FriendMessagePro) GetIsBack() int32 {
	if m != nil {
		return m.IsBack
	}
	return 0
}

func init() {
	proto.RegisterType((*FriendMessagePro)(nil), "com.dipper.proto.rpc.FriendMessagePro")
}

func init() {
	proto.RegisterFile("FriendMessageService.proto", fileDescriptor_a8804fa9690fd5de)
}

var fileDescriptor_a8804fa9690fd5de = []byte{
	// 248 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0x87, 0xd9, 0xea, 0xfe, 0xe9, 0x20, 0x22, 0xa1, 0x6a, 0x50, 0x0f, 0x8b, 0xa7, 0x1e, 0x64,
	0x0f, 0xfa, 0x06, 0x8b, 0x08, 0x1e, 0x84, 0xb2, 0xea, 0x39, 0xa4, 0x99, 0x51, 0x86, 0x76, 0x37,
	0xcb, 0x24, 0xfa, 0xc0, 0x3e, 0x89, 0x34, 0xb6, 0x82, 0xd2, 0x63, 0xbe, 0xef, 0x97, 0x39, 0x7c,
	0x70, 0xf1, 0x20, 0x4c, 0x03, 0x3e, 0x51, 0x08, 0xf6, 0x9d, 0x9e, 0x49, 0x3e, 0xd9, 0x51, 0x33,
	0x8a, 0x8f, 0x5e, 0xcd, 0x9c, 0xef, 0x1b, 0xe4, 0x71, 0x24, 0xf9, 0x21, 0x8d, 0x8c, 0xee, 0xfa,
	0x2b, 0x83, 0x93, 0x3f, 0x9f, 0x16, 0xe2, 0xd5, 0x31, 0x4c, 0x18, 0x75, 0x56, 0x67, 0xf3, 0xbc,
	0x9b, 0x30, 0xaa, 0x1a, 0x8e, 0xde, 0xc4, 0xf7, 0xe6, 0x23, 0x90, 0x18, 0x46, 0x3d, 0x49, 0x06,
	0x36, 0xec, 0x35, 0x90, 0x3c, 0xa2, 0xba, 0x02, 0x88, 0xfe, 0xd7, 0x1f, 0x24, 0x5f, 0x45, 0xbf,
	0xb5, 0x1a, 0x4a, 0xe7, 0x87, 0x48, 0x43, 0xd4, 0x87, 0x75, 0x36, 0x9f, 0x76, 0xbb, 0xa7, 0xba,
	0x84, 0x69, 0xa0, 0x01, 0x4d, 0xe4, 0x9e, 0x74, 0x9e, 0x5c, 0xb5, 0x01, 0x2f, 0xdc, 0x93, 0x3a,
	0x87, 0x92, 0x83, 0x11, 0xb2, 0xa8, 0x8b, 0x74, 0xb1, 0xe0, 0xd0, 0x91, 0x45, 0x75, 0x0a, 0x05,
	0x07, 0x83, 0xb4, 0xd6, 0x65, 0xe2, 0x39, 0x87, 0x7b, 0x5a, 0x6f, 0xf7, 0x4b, 0xeb, 0x56, 0xba,
	0xda, 0xed, 0x5b, 0xeb, 0x56, 0xb7, 0x67, 0x30, 0xdb, 0x17, 0xa6, 0xbd, 0x81, 0xbd, 0x51, 0x5a,
	0xf5, 0xbf, 0x48, 0xf4, 0x8b, 0x6c, 0x59, 0xa4, 0xc1, 0xdd, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x24, 0x88, 0x75, 0x3c, 0x65, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FriendMessageServiceClient is the client API for FriendMessageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FriendMessageServiceClient interface {
}

type friendMessageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFriendMessageServiceClient(cc grpc.ClientConnInterface) FriendMessageServiceClient {
	return &friendMessageServiceClient{cc}
}

// FriendMessageServiceServer is the server API for FriendMessageService service.
type FriendMessageServiceServer interface {
}

// UnimplementedFriendMessageServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFriendMessageServiceServer struct {
}

func RegisterFriendMessageServiceServer(s *grpc.Server, srv FriendMessageServiceServer) {
	s.RegisterService(&_FriendMessageService_serviceDesc, srv)
}

var _FriendMessageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.dipper.proto.rpc.FriendMessageService",
	HandlerType: (*FriendMessageServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "FriendMessageService.proto",
}
