# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import ImageService_pb2 as ImageService__pb2


class ImageServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.save = channel.unary_unary(
        '/com.dipper.proto.rpc.ImageService/save',
        request_serializer=ImageService__pb2.ImageData.SerializeToString,
        response_deserializer=ImageService__pb2.ImageSaveResult.FromString,
        )
    self.download = channel.unary_unary(
        '/com.dipper.proto.rpc.ImageService/download',
        request_serializer=ImageService__pb2.ImagePath.SerializeToString,
        response_deserializer=ImageService__pb2.ImageLoadResult.FromString,
        )


class ImageServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def save(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def download(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ImageServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'save': grpc.unary_unary_rpc_method_handler(
          servicer.save,
          request_deserializer=ImageService__pb2.ImageData.FromString,
          response_serializer=ImageService__pb2.ImageSaveResult.SerializeToString,
      ),
      'download': grpc.unary_unary_rpc_method_handler(
          servicer.download,
          request_deserializer=ImageService__pb2.ImagePath.FromString,
          response_serializer=ImageService__pb2.ImageLoadResult.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'com.dipper.proto.rpc.ImageService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
